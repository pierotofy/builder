name: Publish Docker

on:
  push:
    branches:
    - main
    tags:
    - v*
  workflow_dispatch:
jobs:
  build-amd64:
    runs-on: ubuntu-latest
    timeout-minutes: 1440
    steps:
    - name: Checkout
      uses: actions/checkout@v5
    - uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.BUILD_SSH_KEY }}
    - name: Checkout Build Repo
      run: |
        rm -fr *
        git clone git@github.com:${{secrets.BUILD_REPO}}.git
        export DIRNAME=$(ls)
        mv $DIRNAME/* . && rm -fr $DIRNAME
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        config-inline: |
          [worker.oci]
            max-parallelism = 1
    - name: Login to DockerHub
      uses: docker/login-action@v3 
      with:
        registry: ${{ secrets.DOCKERHUB_REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Docker meta
      id: docker_meta
      uses: crazy-max/ghaction-docker-meta@v1
      with:
        images: ${{secrets.DOCKERHUB_REPO}}
        tag-semver: |
          {{version}}
    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 10
    - uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: |
          ${{ secrets.SSH_KEY }}
          ${{ secrets.SSH_KEY_SM }}
          ${{ secrets.SSH_KEY_OO }}
          ${{ secrets.SSH_KEY_PD }}
          ${{ secrets.SSH_KEY_OS }}
    - name: Collect git and ssh config files
      run: |
        mkdir root-config
        cp -r ~/.gitconfig  ~/.ssh root-config/
    - name: Build and push Docker image (AMD64)
      id: docker_build_amd64
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./portable.Dockerfile
        platforms: linux/amd64
        push: true
        no-cache: true
        tags: |
          ${{secrets.DOCKERHUB_REPO}}:latest-amd64
        provenance: false
        ssh: |
            default=${{ env.SSH_AUTH_SOCK }}

  build-arm64:
    runs-on: ubuntu-24.04-arm
    timeout-minutes: 1440
    steps:
    - name: Checkout
      uses: actions/checkout@v5
    - uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.BUILD_SSH_KEY }}
    - name: Checkout Build Repo
      run: |
        rm -fr *
        git clone git@github.com:${{secrets.BUILD_REPO}}.git
        export DIRNAME=$(ls)
        mv $DIRNAME/* . && rm -fr $DIRNAME
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        config-inline: |
          [worker.oci]
            max-parallelism = 1
    - name: Login to DockerHub
      uses: docker/login-action@v3 
      with:
        registry: ${{ secrets.DOCKERHUB_REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 10
    - uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: |
          ${{ secrets.SSH_KEY }}
          ${{ secrets.SSH_KEY_SM }}
          ${{ secrets.SSH_KEY_OO }}
          ${{ secrets.SSH_KEY_PD }}
          ${{ secrets.SSH_KEY_OS }}
    - name: Collect git and ssh config files
      run: |
        mkdir root-config
        cp -r ~/.gitconfig  ~/.ssh root-config/
    - name: Build and push Docker image (ARM64)
      id: docker_build_arm64
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./portable.Dockerfile
        platforms: linux/arm64
        push: true
        no-cache: true
        tags: |
          ${{secrets.DOCKERHUB_REPO}}:latest-arm64
        provenance: false
        ssh: |
            default=${{ env.SSH_AUTH_SOCK }}

  create-manifest:
    runs-on: ubuntu-latest
    needs: [build-amd64, build-arm64]
    steps:
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.DOCKERHUB_REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Create and push multi-platform manifest
      run: |
        docker pull --platform linux/amd64 ${{secrets.DOCKERHUB_REPO}}:latest-amd64
        docker pull --platform linux/arm64 ${{secrets.DOCKERHUB_REPO}}:latest-arm64
        docker manifest create ${{secrets.DOCKERHUB_REPO}}:latest \
          ${{secrets.DOCKERHUB_REPO}}:latest-amd64 \
          ${{secrets.DOCKERHUB_REPO}}:latest-arm64
        docker manifest push ${{secrets.DOCKERHUB_REPO}}:latest
    
    # Trigger NodeODM build, OATS test
    - name: Dispatch Build Event
      id: build_dispatch
      run: |
        curl -X POST -u "${{secrets.PAT_USERNAME}}:${{secrets.PAT_TOKEN}}" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" https://api.github.com/repos/pierotofy/NodeODM/actions/workflows/publish-docker.yaml/dispatches --data '{"ref": "master"}'
        curl -X POST -u "${{secrets.PAT_USERNAME}}:${{secrets.PAT_TOKEN}}" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" https://api.github.com/repos/pierotofy/oats/actions/workflows/test.yaml/dispatches --data '{"ref": "master"}'
